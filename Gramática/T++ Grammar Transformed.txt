T++ Grammar Transformed.

Gramática atualizada

<type> ::= 'vazio'
	| 'inteiro'
	| 'flutuante'

<variableDec> ::= <type> ':' 'id' 

<operationsExp> ::= <equalityExp>

<equalityExp> ::= <relationalExp> <equalityExpTransformed>

<equalityExpTransformed> ::= NULL
			| '=' <relationalExp> <equalityExpTransformed>

<relationalExp> ::= <additiveExp> <relationalExpTransformed>

<relationalExpTransformed> ::= NULL
			| < <additiveExp> <relationalExpTransformed>
			| > <additiveExp> <relationalExpTransformed>
			| <= <additiveExp> <relationalExpTransformed>
			| >= <additiveExp> <relationalExpTransformed>

<additiveExp> ::= <multiplicativeExp> <additiveExpTransformed>

<additiveExpTransformed> ::= NULL
			| + <multiplicativeExp> <additiveExpTransformed>
			| - <multiplicativeExp> <additiveExpTransformed> 		

<multiplicativeExp> ::= <factor> <multiplicationExpTransformed>

<multiplicationExpTransformed> ::= NULL
				| * <factor> <multiplicationExpTransformed>
				| / <factor> <multiplicationExpTransformed>

<factor> ::= '(' <operationsExp> ')'
	| 'numberFloat'
	| 'numberInt'
	| 'id'

<prototypeDef> ::= '(' <paramFunction> ')'

<paramFunction> ::= NULL
		| <variableDec> ',' <paramFunction>
		| <variableDec>

<functionDec> ::= <type> 'id' <prototypeDef> <compoundStmt> 'fim'

<prototypeCall> ::= NULL
		| <operationsExp> ',' <protypeCall>
		| <operationsExp>

<functionCall> ::= 'id' '(' <paramCall> ')' 

<iterationExp> ::= 'repita' <compoundStmt> 'até' <operationsExp> 'fim'

<selectionExp> ::= 'se' <operationsExp> 'então' <compoundStmt> 'fim'
		| 'se' <operationsExp> 'então' <compoundStmt> 'senão' <compoundStmt> 'fim'

<ioTypes> ::= 'id'
	| 'numberInt'
	| 'numberFloat'
	| <functionCall>

<attributionExp> ::= 'id' ':=' <operationsExp>

<returnCom> ::= 'retorna' '(' <operationsExp> ')'

<readCom> ::= 'leia' '(' 'id' ')'

<writeCom> ::= 'escreve' '(' <operationsExp> ')'

<compoundStmt> ::= <expression> <compoundStmt>
		| <expression>

<expression> ::= <selectionExp>
		| <iterationExp>
		| <functionCall>
		| <readCom>
		| <writeCom>
		| <returnCom>
		| <variableDec>
		| <attributionExp>
